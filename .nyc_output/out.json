{
  "C:\\projects\\cypress-laracast-vue-testing\\src\\main.js": {
    "path": "C:\\projects\\cypress-laracast-vue-testing\\src\\main.js",
    "statementMap": {
      "0": {
        "start": {
          "line": 4,
          "column": 0
        },
        "end": {
          "line": 4,
          "column": 32
        }
      },
      "1": {
        "start": {
          "line": 6,
          "column": 0
        },
        "end": {
          "line": 10,
          "column": 17
        }
      },
      "2": {
        "start": {
          "line": 8,
          "column": 4
        },
        "end": {
          "line": 8,
          "column": 17
        }
      }
    },
    "fnMap": {
      "0": {
        "name": "(anonymous_0)",
        "decl": {
          "start": {
            "line": 7,
            "column": 10
          },
          "end": {
            "line": 7,
            "column": 11
          }
        },
        "loc": {
          "start": {
            "line": 7,
            "column": 23
          },
          "end": {
            "line": 9,
            "column": 3
          }
        },
        "line": 7
      }
    },
    "branchMap": {},
    "s": {
      "0": 4,
      "1": 4,
      "2": 4
    },
    "f": {
      "0": 4
    },
    "b": {},
    "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    "hash": "a50058d5f83b51efafd673a3583228811781e669"
  },
  "C:\\projects\\cypress-laracast-vue-testing\\src\\components\\FormFocus.vue": {
    "path": "C:\\projects\\cypress-laracast-vue-testing\\src\\components\\FormFocus.vue",
    "statementMap": {},
    "fnMap": {},
    "branchMap": {},
    "s": {},
    "f": {},
    "b": {},
    "inputSourceMap": {
      "version": 3,
      "sources": [
        "C:\\projects\\cypress-laracast-vue-testing\\src\\components\\FormFocus.vue"
      ],
      "names": [],
      "mappings": ";;;;;;;;;;;;;AAaA",
      "file": "FormFocus.vue",
      "sourceRoot": "",
      "sourcesContent": [
        "<template>\n  <form>\n    <input\n      autofocus\n      data-cy=\"theField\"\n      type=\"email\"\n      placeholder=\"The Email Field\"\n    />\n    <p data-cy=\"message\">Hello!</p>\n  </form>\n</template>\n\n<script>\nexport default {}\n</script>\n"
      ]
    },
    "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    "hash": "d4b26acfae9d442b4df37b3075fab1b39bdee4e1"
  },
  "C:\\projects\\cypress-laracast-vue-testing\\src\\components\\CountdownAlternate.vue": {
    "path": "C:\\projects\\cypress-laracast-vue-testing\\src\\components\\CountdownAlternate.vue",
    "statementMap": {
      "0": {
        "start": {
          "line": 30,
          "column": 4
        },
        "end": {
          "line": 32,
          "column": 5
        }
      },
      "1": {
        "start": {
          "line": 36,
          "column": 6
        },
        "end": {
          "line": 36,
          "column": 32
        }
      },
      "2": {
        "start": {
          "line": 39,
          "column": 22
        },
        "end": {
          "line": 39,
          "column": 72
        }
      },
      "3": {
        "start": {
          "line": 40,
          "column": 6
        },
        "end": {
          "line": 42,
          "column": 7
        }
      },
      "4": {
        "start": {
          "line": 41,
          "column": 8
        },
        "end": {
          "line": 41,
          "column": 30
        }
      },
      "5": {
        "start": {
          "line": 43,
          "column": 6
        },
        "end": {
          "line": 43,
          "column": 22
        }
      },
      "6": {
        "start": {
          "line": 47,
          "column": 21
        },
        "end": {
          "line": 49,
          "column": 12
        }
      },
      "7": {
        "start": {
          "line": 48,
          "column": 6
        },
        "end": {
          "line": 48,
          "column": 27
        }
      },
      "8": {
        "start": {
          "line": 50,
          "column": 4
        },
        "end": {
          "line": 50,
          "column": 55
        }
      },
      "9": {
        "start": {
          "line": 50,
          "column": 31
        },
        "end": {
          "line": 50,
          "column": 54
        }
      }
    },
    "fnMap": {
      "0": {
        "name": "(anonymous_0)",
        "decl": {
          "start": {
            "line": 29,
            "column": 2
          },
          "end": {
            "line": 29,
            "column": 3
          }
        },
        "loc": {
          "start": {
            "line": 29,
            "column": 9
          },
          "end": {
            "line": 33,
            "column": 3
          }
        },
        "line": 29
      },
      "1": {
        "name": "(anonymous_1)",
        "decl": {
          "start": {
            "line": 35,
            "column": 4
          },
          "end": {
            "line": 35,
            "column": 5
          }
        },
        "loc": {
          "start": {
            "line": 35,
            "column": 15
          },
          "end": {
            "line": 37,
            "column": 5
          }
        },
        "line": 35
      },
      "2": {
        "name": "(anonymous_2)",
        "decl": {
          "start": {
            "line": 38,
            "column": 4
          },
          "end": {
            "line": 38,
            "column": 5
          }
        },
        "loc": {
          "start": {
            "line": 38,
            "column": 16
          },
          "end": {
            "line": 44,
            "column": 5
          }
        },
        "line": 38
      },
      "3": {
        "name": "(anonymous_3)",
        "decl": {
          "start": {
            "line": 46,
            "column": 2
          },
          "end": {
            "line": 46,
            "column": 3
          }
        },
        "loc": {
          "start": {
            "line": 46,
            "column": 12
          },
          "end": {
            "line": 51,
            "column": 3
          }
        },
        "line": 46
      },
      "4": {
        "name": "(anonymous_4)",
        "decl": {
          "start": {
            "line": 47,
            "column": 33
          },
          "end": {
            "line": 47,
            "column": 34
          }
        },
        "loc": {
          "start": {
            "line": 47,
            "column": 39
          },
          "end": {
            "line": 49,
            "column": 5
          }
        },
        "line": 47
      },
      "5": {
        "name": "(anonymous_5)",
        "decl": {
          "start": {
            "line": 50,
            "column": 25
          },
          "end": {
            "line": 50,
            "column": 26
          }
        },
        "loc": {
          "start": {
            "line": 50,
            "column": 31
          },
          "end": {
            "line": 50,
            "column": 54
          }
        },
        "line": 50
      }
    },
    "branchMap": {
      "0": {
        "loc": {
          "start": {
            "line": 40,
            "column": 6
          },
          "end": {
            "line": 42,
            "column": 7
          }
        },
        "type": "if",
        "locations": [
          {
            "start": {
              "line": 40,
              "column": 6
            },
            "end": {
              "line": 42,
              "column": 7
            }
          },
          {
            "start": {
              "line": 40,
              "column": 6
            },
            "end": {
              "line": 42,
              "column": 7
            }
          }
        ],
        "line": 40
      }
    },
    "s": {
      "0": 27,
      "1": 47,
      "2": 47,
      "3": 47,
      "4": 14,
      "5": 47,
      "6": 27,
      "7": 156,
      "8": 27,
      "9": 14
    },
    "f": {
      "0": 27,
      "1": 47,
      "2": 47,
      "3": 27,
      "4": 156,
      "5": 14
    },
    "b": {
      "0": [
        14,
        33
      ]
    },
    "inputSourceMap": {
      "version": 3,
      "sources": [
        "C:\\projects\\cypress-laracast-vue-testing\\src\\components\\CountdownAlternate.vue"
      ],
      "names": [],
      "mappings": ";;;;;;;;;;;;;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
      "file": "CountdownAlternate.vue",
      "sourceRoot": "",
      "sourcesContent": [
        "<template>\n  <div>\n    <div v-if=\"!finished\">\n      <span>{{ remaining.days() }} Days, </span>\n      <span>{{ remaining.hours() }} Hours, </span>\n      <span>{{ remaining.minutes() }} Minutes, </span>\n      <span>{{ remaining.seconds() }} Seconds, </span>\n      left...\n    </div>\n    <p v-else>{{ expiredText }}</p>\n  </div>\n</template>\n\n<script>\nimport moment from 'moment'\nexport default {\n  name: 'CountDownAlternate',\n  props: {\n    until: {\n      type: [String, Date, Object],\n      default: '',\n      required: true,\n    },\n    expiredText: {\n      type: String,\n      default: 'Now Expired',\n    },\n  },\n  data() {\n    return {\n      now: new Date(),\n    }\n  },\n  computed: {\n    finished() {\n      return this.remaining <= 0\n    },\n    remaining() {\n      let remaining = moment.duration(Date.parse(this.until) - this.now)\n      if (remaining.seconds() <= 0) {\n        this.$emit('finished')\n      }\n      return remaining\n    },\n  },\n  created() {\n    const interval = setInterval(() => {\n      this.now = new Date()\n    }, 1000)\n    this.$on('finished', () => clearInterval(interval))\n  },\n}\n</script>\n"
      ]
    },
    "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    "hash": "6acc9a762a6b1925ee06c6794f76a2c33291866c"
  },
  "C:\\projects\\cypress-laracast-vue-testing\\src\\components\\Countdown.vue": {
    "path": "C:\\projects\\cypress-laracast-vue-testing\\src\\components\\Countdown.vue",
    "statementMap": {
      "0": {
        "start": {
          "line": 30,
          "column": 4
        },
        "end": {
          "line": 32,
          "column": 5
        }
      },
      "1": {
        "start": {
          "line": 36,
          "column": 6
        },
        "end": {
          "line": 36,
          "column": 32
        }
      },
      "2": {
        "start": {
          "line": 39,
          "column": 22
        },
        "end": {
          "line": 39,
          "column": 72
        }
      },
      "3": {
        "start": {
          "line": 40,
          "column": 6
        },
        "end": {
          "line": 40,
          "column": 22
        }
      },
      "4": {
        "start": {
          "line": 44,
          "column": 21
        },
        "end": {
          "line": 50,
          "column": 12
        }
      },
      "5": {
        "start": {
          "line": 45,
          "column": 6
        },
        "end": {
          "line": 45,
          "column": 27
        }
      },
      "6": {
        "start": {
          "line": 46,
          "column": 6
        },
        "end": {
          "line": 49,
          "column": 7
        }
      },
      "7": {
        "start": {
          "line": 47,
          "column": 8
        },
        "end": {
          "line": 47,
          "column": 30
        }
      },
      "8": {
        "start": {
          "line": 48,
          "column": 8
        },
        "end": {
          "line": 48,
          "column": 31
        }
      }
    },
    "fnMap": {
      "0": {
        "name": "(anonymous_0)",
        "decl": {
          "start": {
            "line": 29,
            "column": 2
          },
          "end": {
            "line": 29,
            "column": 3
          }
        },
        "loc": {
          "start": {
            "line": 29,
            "column": 9
          },
          "end": {
            "line": 33,
            "column": 3
          }
        },
        "line": 29
      },
      "1": {
        "name": "(anonymous_1)",
        "decl": {
          "start": {
            "line": 35,
            "column": 4
          },
          "end": {
            "line": 35,
            "column": 5
          }
        },
        "loc": {
          "start": {
            "line": 35,
            "column": 15
          },
          "end": {
            "line": 37,
            "column": 5
          }
        },
        "line": 35
      },
      "2": {
        "name": "(anonymous_2)",
        "decl": {
          "start": {
            "line": 38,
            "column": 4
          },
          "end": {
            "line": 38,
            "column": 5
          }
        },
        "loc": {
          "start": {
            "line": 38,
            "column": 16
          },
          "end": {
            "line": 41,
            "column": 5
          }
        },
        "line": 38
      },
      "3": {
        "name": "(anonymous_3)",
        "decl": {
          "start": {
            "line": 43,
            "column": 2
          },
          "end": {
            "line": 43,
            "column": 3
          }
        },
        "loc": {
          "start": {
            "line": 43,
            "column": 12
          },
          "end": {
            "line": 51,
            "column": 3
          }
        },
        "line": 43
      },
      "4": {
        "name": "(anonymous_4)",
        "decl": {
          "start": {
            "line": 44,
            "column": 33
          },
          "end": {
            "line": 44,
            "column": 34
          }
        },
        "loc": {
          "start": {
            "line": 44,
            "column": 39
          },
          "end": {
            "line": 50,
            "column": 5
          }
        },
        "line": 44
      }
    },
    "branchMap": {
      "0": {
        "loc": {
          "start": {
            "line": 46,
            "column": 6
          },
          "end": {
            "line": 49,
            "column": 7
          }
        },
        "type": "if",
        "locations": [
          {
            "start": {
              "line": 46,
              "column": 6
            },
            "end": {
              "line": 49,
              "column": 7
            }
          },
          {
            "start": {
              "line": 46,
              "column": 6
            },
            "end": {
              "line": 49,
              "column": 7
            }
          }
        ],
        "line": 46
      }
    },
    "s": {
      "0": 27,
      "1": 47,
      "2": 173,
      "3": 173,
      "4": 27,
      "5": 146,
      "6": 146,
      "7": 14,
      "8": 14
    },
    "f": {
      "0": 27,
      "1": 47,
      "2": 173,
      "3": 27,
      "4": 146
    },
    "b": {
      "0": [
        14,
        132
      ]
    },
    "inputSourceMap": {
      "version": 3,
      "sources": [
        "C:\\projects\\cypress-laracast-vue-testing\\src\\components\\Countdown.vue"
      ],
      "names": [],
      "mappings": ";;;;;;;;;;;;;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
      "file": "Countdown.vue",
      "sourceRoot": "",
      "sourcesContent": [
        "<template>\n  <div>\n    <div v-if=\"!finished\">\n      <span>{{ remaining.days() }} Days, </span>\n      <span>{{ remaining.hours() }} Hours, </span>\n      <span>{{ remaining.minutes() }} Minutes, </span>\n      <span>{{ remaining.seconds() }} Seconds, </span>\n      left...\n    </div>\n    <p v-else>{{ expiredText }}</p>\n  </div>\n</template>\n\n<script>\nimport moment from 'moment'\nexport default {\n  name: 'CountDown',\n  props: {\n    until: {\n      type: [String, Date, Object],\n      default: '',\n      required: true,\n    },\n    expiredText: {\n      type: String,\n      default: 'Now Expired',\n    },\n  },\n  data() {\n    return {\n      now: new Date(),\n    }\n  },\n  computed: {\n    finished() {\n      return this.remaining <= 0\n    },\n    remaining() {\n      let remaining = moment.duration(Date.parse(this.until) - this.now)\n      return remaining\n    },\n  },\n  created() {\n    const interval = setInterval(() => {\n      this.now = new Date()\n      if (this.remaining.seconds() <= 0) {\n        this.$emit('finished')\n        clearInterval(interval)\n      }\n    }, 1000)\n  },\n}\n</script>\n"
      ]
    },
    "_coverageSchema": "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    "hash": "442e6558bae9c937a3ddfcb8ecc6ef5b28d917dd"
  }
}